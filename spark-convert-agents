#!/usr/bin/env python3
"""
SPARK 에이전트 변환 명령어
사용법: spark-convert-agents [옵션]
"""

import os
import sys
import argparse
from pathlib import Path

def convert_md_to_txt(agents_dir, output_dir=None, combine=True, verbose=True):
    """
    agents 디렉토리의 모든 .md 파일을 .txt로 변환
    """
    agents_path = Path(agents_dir)
    
    if not agents_path.exists():
        print(f"❌ 경로를 찾을 수 없습니다: {agents_dir}")
        return False
    
    # 출력 디렉토리 설정
    if output_dir:
        output_path = Path(output_dir)
    else:
        output_path = agents_path.parent / "agents_txt"
    
    output_path.mkdir(exist_ok=True, parents=True)
    
    # .md 파일 찾기
    md_files = list(agents_path.glob("*.md"))
    
    if not md_files:
        print(f"⚠️ {agents_dir}에 .md 파일이 없습니다.")
        return False
    
    if verbose:
        print(f"📁 출력 디렉토리: {output_path}")
        print(f"📝 {len(md_files)}개의 .md 파일을 변환합니다...\n")
    
    converted_count = 0
    for md_file in md_files:
        try:
            # .txt 파일 경로 생성
            txt_filename = md_file.stem + ".txt"
            txt_path = output_path / txt_filename
            
            # 파일 내용 읽기
            with open(md_file, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # .txt 파일로 저장
            with open(txt_path, 'w', encoding='utf-8') as f:
                f.write(content)
            
            if verbose:
                print(f"✅ {md_file.name} → {txt_filename}")
            converted_count += 1
            
        except Exception as e:
            print(f"❌ {md_file.name} 변환 실패: {e}")
    
    if verbose:
        print(f"\n🎉 변환 완료! {converted_count}/{len(md_files)} 파일이 성공적으로 변환되었습니다.")
        print(f"📂 변환된 파일 위치: {output_path}")
    
    # 통합 파일 생성
    if combine:
        if verbose:
            print("\n📚 통합 파일을 생성합니다...")
        
        combined_path = output_path / "all_agents_combined.txt"
        with open(combined_path, 'w', encoding='utf-8') as combined:
            combined.write("=" * 80 + "\n")
            combined.write("SPARK v3.5 - 모든 에이전트 정의 통합 파일\n")
            combined.write("=" * 80 + "\n\n")
            
            for md_file in sorted(md_files):
                with open(md_file, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                combined.write(f"\n{'='*80}\n")
                combined.write(f"파일: {md_file.name}\n")
                combined.write(f"{'='*80}\n\n")
                combined.write(content)
                combined.write("\n\n")
        
        if verbose:
            print(f"✅ 통합 파일 생성: {combined_path}")
    
    return True

def main():
    parser = argparse.ArgumentParser(
        description="SPARK 에이전트 MD 파일을 TXT로 변환",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
예시:
  spark-convert-agents                    # 기본 변환 (통합 파일 포함)
  spark-convert-agents --no-combine       # 개별 파일만 변환
  spark-convert-agents -o ~/Desktop       # 출력 위치 지정
  spark-convert-agents -q                 # 조용한 모드
  
출력:
  - 개별 .txt 파일들
  - all_agents_combined.txt (통합 파일, --no-combine 제외 시)
        """
    )
    
    parser.add_argument(
        '-i', '--input',
        default="/Users/jason/Projects/spark-claude/.claude/agents",
        help='입력 디렉토리 경로 (기본값: SPARK agents 디렉토리)'
    )
    
    parser.add_argument(
        '-o', '--output',
        help='출력 디렉토리 경로 (기본값: agents_txt)'
    )
    
    parser.add_argument(
        '--no-combine',
        action='store_true',
        help='통합 파일을 생성하지 않음'
    )
    
    parser.add_argument(
        '-q', '--quiet',
        action='store_true',
        help='조용한 모드 (진행 상황 출력 안 함)'
    )
    
    args = parser.parse_args()
    
    if not args.quiet:
        print("🚀 SPARK 에이전트 MD → TXT 변환")
        print("=" * 50)
    
    success = convert_md_to_txt(
        agents_dir=args.input,
        output_dir=args.output,
        combine=not args.no_combine,
        verbose=not args.quiet
    )
    
    return 0 if success else 1

if __name__ == "__main__":
    sys.exit(main())