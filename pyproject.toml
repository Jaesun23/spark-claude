[project]
name = "spark-claude"
version = "4.1.0"
description = "⚡ SPARK: Subagent Performance Architecture with Reduced toKens - Revolutionary TRAITS system with 95.5% token efficiency"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
    { name = "Jason", email = "" },
    { name = "1호 (Claude AI)", email = "" },
    { name = "2호 (Claude CODE)", email = "" }
]
keywords = ["claude", "ai", "subagent", "performance", "optimization"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "psutil>=5.9.0",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "black>=24.0.0",
    "ruff>=0.5.0",
    "mypy>=1.10.0",
]
benchmark = [
    "psutil>=5.9.0",
    "tabulate>=0.9.0",
]
# full installation includes benchmark and development dependencies
full = [
    "psutil>=5.9.0",
    "tabulate>=0.9.0", 
    "pytest>=8.0.0",
    "black>=24.0.0", 
    "ruff>=0.5.0",
    "mypy>=1.10.0",
]

[project.urls]
Homepage = "https://github.com/Jaesun23/spark-claude"
Repository = "https://github.com/Jaesun23/spark-claude"
Issues = "https://github.com/Jaesun23/spark-claude/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["benchmarks"]
sources = {".claude" = "claude"}

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]

[tool.uv]
dev-dependencies = [
    "ipython>=8.0.0",
    "ipdb>=0.13.0",
]
